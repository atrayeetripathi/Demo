{"version":3,"sources":["components/common/header.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","media","height","paddingTop","ScrollTop","props","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","Header","Fragment","CssBaseline","AppBar","Toolbar","CardMedia","image","title","id","Container","Box","my","Array","map","join","Fab","color","size","aria-label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oSAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,QACVC,OAAQH,EAAMI,QAAQ,GACtBC,MAAOL,EAAMI,QAAQ,IAEvBE,MAAO,CACLC,OAAQ,EACRC,WAAY,YAIhB,SAASC,EAAUC,GAAQ,IACjBC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OACZC,EAAUf,IAIVgB,EAAUC,YAAiB,CAC/BC,OAAQJ,EAASA,SAAWK,EAC5BC,mBAAmB,EACnBC,UAAW,MAWb,OACE,cAACC,EAAA,EAAD,CAAMC,GAAIP,EAAV,SACE,qBAAKQ,QAVW,SAACC,GACnB,IAAMC,GAAUD,EAAMP,OAAOS,eAAiBC,UAAUC,cAAc,uBAElEH,GACFA,EAAOI,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAMxBC,KAAK,eAAeC,UAAWnB,EAAQZ,KAAlE,SACGU,MAeM,SAASsB,EAAOvB,GAC7B,IAAMG,EAAUf,IAChB,OACE,eAAC,IAAMoC,SAAP,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEN,UAAWnB,EAAQP,MACnBiC,MAAM,gCACNC,MAAM,aAKZ,cAACH,EAAA,EAAD,CAASI,GAAG,uBACZ,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACG,YAAI,IAAIC,MAAM,KACZC,KACC,0QAKDC,KAAK,UAGZ,cAACtC,EAAD,2BAAeC,GAAf,aACE,cAACsC,EAAA,EAAD,CAAKC,MAAM,YAAYC,KAAK,QAAQC,aAAW,qBAA/C,SACE,cAAC,IAAD,YCtFKC,MARf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAACC,EAAD,OCOSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BZ,M","file":"static/js/main.a29f4f3e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import logo from '../../../static/images/logo.jpeg'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  media: {\n    height: 0,\n    paddingTop: '3.5%', // 16:9\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function Header(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <CardMedia\n            className={classes.media}\n            image='../../static/images/logo.jpeg'\n            title=\"logo\"\n          />\n          {/*<Typography variant=\"h6\">TiE News</Typography>*/}\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <Container>\n        <Box my={2}>\n          {[...new Array(12)]\n            .map(\n              () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n            )\n            .join('\\n')}\n        </Box>\n      </Container>\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import Header from './components/common/header'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}